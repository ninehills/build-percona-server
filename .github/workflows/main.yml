# This is a basic workflow to help you get started with Actions

name: BuildDeb

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    env:
      MAJOR_VERSION: "5.7"
      VERSION: "5.7.34-37"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup upterm session
        uses: lhotari/action-upterm@v1
      - name: Download deb source
        run: |
          apt-get update && apt-get install -y wget
          mkdir -p artifacts/source_deb
          cd artifacts/source_deb
          wget https://downloads.percona.com/downloads/Percona-Server-${MAJOR_VERSION}/Percona-Server-${VERSION}/source/debian/percona-server-${MAJOR_VERSION}_${VERSION}-1.debian.tar.gz
          wget https://downloads.percona.com/downloads/Percona-Server-${MAJOR_VERSION}/Percona-Server-${VERSION}/source/debian/percona-server-${MAJOR_VERSION}_${VERSION}-1.dsc
          wget https://downloads.percona.com/downloads/Percona-Server-${MAJOR_VERSION}/Percona-Server-${VERSION}/source/debian/percona-server-${MAJOR_VERSION}_${VERSION}-1_source.changes
          wget https://downloads.percona.com/downloads/Percona-Server-${MAJOR_VERSION}/Percona-Server-${VERSION}/source/debian/percona-server-${MAJOR_VERSION}_${VERSION}.orig.tar.gz
          
      - name: Build in arm64
        # You may pin to the exact commit or the version.
        # uses: uraimo/run-on-arch-action@07a46afceb4aea01aaa545fedfff61ad9e4c7df0
        uses: uraimo/run-on-arch-action@v2.1.1
        with:
          # CPU architecture: armv6, armv7, aarch64, s390x, ppc64le.
          arch: aarch64
          # Linux distribution name: ubuntu16.04, ubuntu18.04, ubuntu20.04, bullseye, buster, stretch, jessie, fedora_latest, alpine_latest, archarm_latest.
          distro: ubuntu20.04
          # Your GitHub token, used for caching Docker images in your project's public package registry. Usually this would just be $\{{ github.token }}. This speeds up builds and is highly recommended.
          githubToken: ${{ github.token }}
          env: |
            BRANCH: "Percona-Server-${{ env.VERSION }}"
            GIT_REPO: "https://github.com/percona/percona-server.git"
            RPM_RELEASE: "1"
            DEB_RELEASE: "1"
          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          # Shell commands to execute in the container.
          run: |
            echo "Starting build perconna-server"
            set -o xtrace
            apt-get update && apt-get install -y wget
            rm -rf test || true
            mkdir test
            cp -r /artifacts/source_deb test/
            wget https://raw.githubusercontent.com/percona/percona-server/${BRANCH}/build-ps/percona-server-5.7_builder.sh -O percona-server_builder.sh
            sed -i 's:sudo::g' percona-server_builder.sh
            export build_dir=$(pwd -P)
            cd ${build_dir}
            bash -x ./percona-server_builder.sh --builddir=${build_dir}/test --install_deps=1
            bash -x ./percona-server_builder.sh --builddir=${build_dir}/test --repo=${GIT_REPO} --branch=${BRANCH} --rpm_release=${RPM_RELEASE} --deb_release=${DEB_RELEASE} --build_deb=1
            cp -r deb /artifacts/
            
      - name: Show the artifact
        # Items placed in /artifacts in the container will be in
        # ${PWD}/artifacts on the host.
        run: |
          ls -al "${PWD}/artifacts"
      
      - name: release
        uses: ncipollo/release-action@v1
        with:
          name: "Percona-Server-5.7.34-37"
          artifacts: "artifacts/deb/*"
          token: ${{ secrets.GITHUB_TOKEN }}
